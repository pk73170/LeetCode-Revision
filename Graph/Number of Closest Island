class Solution {
public:
    int closedIsland(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        int res=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==0)
                {
                    if(dfs(grid,i,j)){
                        res+=1;
                    }
                    else{
                        res+=0;
                    }
                }
            }
        }
        return res;
    }
    
    bool dfs(vector<vector<int>>& grid,int i,int j)
    {
        
        if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size()){
            return false;
        }
        
        if(grid[i][j]==1)
            return true;
        
      
        
        grid[i][j]=1;
        
        
        bool x1 = dfs(grid, i+1, j);
        bool x2 = dfs(grid, i, j+1);
        bool x3 = dfs(grid, i-1, j);
        bool x4 = dfs(grid, i, j-1);
        
        
        return x1 && x2 && x3 && x4;
        
        
    }
};
